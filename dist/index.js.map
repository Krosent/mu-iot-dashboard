{"version":3,"sources":["app.js","index.js"],"names":["solidNodeClient","require","SolidFileClient","express","html","app","fs","get","_","res","client","SolidNodeClient","set","login","idp","username","password","getSession","then","session","console","log","JSON","stringify","info","webId","catch","error","status","send","req","fileClient","params","isLoggedIn","fileLink","readFile","fl","existsSync","writeFile","flag","automationFileError","includeNewAutomationsFile","configFileError","err","file","write","end","module","exports","port","listen"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["/* eslint-disable no-console */\nconst solidNodeClient = require('solid-node-client');\nconst SolidFileClient = require('solid-file-client');\nconst express = require('express');\n\n// const axios = require('axios');\n\n// import { getFile, isRawData, getContentType, getSourceUrl, } from \"@inrupt/solid-client\";\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <title>A JavaScript project</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body>\n  <h1>A JavaScript project</h1>\n</body>\n</html>`;\n\nconst app = express();\nconst fs = require('fs');\n\napp.get('/', async (_, res) => {\n  const client = new solidNodeClient.SolidNodeClient();\n  res.set('Content-Type', 'text/html');\n  await client.login({\n    idp: 'https://solidcommunity.net', // e.g. https://solidcommunity.net\n    username: 'iot-solid-bot',\n    password: 'kDLpdi!LK2AV84k',\n  });\n\n  /* idp: 'https://broker.pod.inrupt.com', // e.g. https://solidcommunity.net\n    username: 'iot-solid-bot',\n    password: 'kDLpdi!LK2AV84k',\n  */\n\n  /*\n    Another SOLID account:\n    krosent\n    VtHf5NGuQffE2n7P\n  */\n\n  client\n    .getSession()\n    .then((session) =>\n      console.log(`Session: ${JSON.stringify(session.info.webId)}`))\n    .catch((error) => console.log(`We have error: ${error}`));\n\n  res.status(200).send(html);\n});\n\napp.get('/authorize/:username/:password', async (req, res) => {\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n  console.log(`username: ${req.params.username}`);\n  console.log(`password: ${req.params.password}`);\n\n  await client.login({\n    idp: 'https://solidcommunity.net', // e.g. https://solidcommunity.net\n    username: req.params.username,\n    password: req.params.password,\n  });\n  client\n    .getSession()\n    .then((session) => {\n      console.log(session);\n      if (session.isLoggedIn) {\n        const fileLink = `https://${req.params.username}.solidcommunity.net/automations/automations.yaml`;\n        try {\n          fileClient.readFile(fileLink).then((fl) => {\n            if (!fs.existsSync(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`)) {\n              fs.writeFile(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`, fl, { flag: 'a+' }, (automationFileError) => {\n                if (automationFileError) {\n                  console.error(automationFileError);\n                  return;\n                }\n                // file written successfully\n                console.log(`automations.file for user ${req.params.username} was created`);\n                const includeNewAutomationsFile = `automation ${req.params.username}: !include ${req.params.username}.yaml\\r\\n`;\n                fs.writeFile('/home/krosent/Projects/hass/core/config/configuration.yaml', includeNewAutomationsFile, { flag: 'a+' }, (configFileError) => {\n                  if (configFileError) {\n                    console.error(configFileError);\n                    return;\n                  }\n                  console.log(`automations.file for user ${req.params.username} was added to configuration.yaml`);\n                });\n              });\n            }\n          });\n        } catch (err) {\n          console.log(`error is: ${err}`);\n        }\n\n        res.status(200).send('Authorized');\n      } else {\n        res.status(405).send('Unauthorized');\n      }\n    })\n    .catch((error) => res.status(405).send('Unauthorized'));\n});\n\napp.get('/automations/fetch', async (_, res) => {\n  // https://iot-solid-bot.solidcommunity.net/automations/automations.yaml\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n\n  const fileLink = 'https://iot-solid-bot.solidcommunity.net/automations/automations.yaml';\n  try {\n    const file = await fileClient.readFile(fileLink);\n\n    res.write(file, 'binary');\n    res.end();\n  } catch (err) {\n    console.log(`error is: ${err}`);\n  }\n});\n\nmodule.exports = app;\n","const app = require('./app');\n\nconst port = '8888';\n\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}...`);\n});\n"]}