{"version":3,"sources":["routes/entry.js","routes/dashboard.js","routes/solid-hass.js","app.js","index.js"],"names":["express","require","router","Router","session","solidNodeClient","flash","use","secret","cookie","maxAge","json","urlencoded","extended","sendLoginError","req","res","error","console","log","redirect","get","user","render","loginError","post","client","SolidNodeClient","login","idp","username","body","password","catch","getSession","then","_session","isLoggedIn","status","send","module","exports","fs","SolidFileClient","fileClient","params","fileLink","readFile","fl","existsSync","writeFile","flag","automationFileError","includeNewAutomationsFile","configFileError","err","_","file","write","end","app","path","set","static","join","entryPointRouter","dashboardRouter","solidRouter","port","listen"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\n\nconst session = require('express-session');\n\nconst solidNodeClient = require('solid-node-client');\n\nconst flash = require('connect-flash');\n\nrouter.use(session({ secret: 'session secret key 007', cookie: { maxAge: 60000 } }));\nrouter.use(express.json());\nrouter.use(express.urlencoded({ extended: true }));\nrouter.use(flash());\n\nfunction sendLoginError(req, res, error) {\n  console.log(`Login Error: ${error}`);\n  req.flash('loginError', 'Incorrect  Credentials');\n  res.redirect('/');\n}\n\nrouter.get('/', (req, res) => {\n  if (req.session.user) {\n    res.redirect('/dashboard');\n  } else {\n    res.render('pages/entry', { loginError: req.flash('loginError') });\n  }\n});\n\nrouter.post('/login', async (req, res) => {\n  const client = new solidNodeClient.SolidNodeClient();\n\n  await client.login({\n    idp: 'https://solidcommunity.net',\n    username: req.body.username,\n    password: req.body.password,\n  }).catch((error) => {\n    sendLoginError(req, res, error);\n  });\n\n  client\n    .getSession()\n    .then((_session) => {\n      console.log(_session);\n      if (_session.isLoggedIn) {\n        req.session.user = req.body.username;\n        res.redirect('/');\n      } else {\n        sendLoginError(req, res, 'Session Login not Authorized');\n      }\n    })\n    .catch((error) => res.status(405).send(`Unauthorized, error: ${error}`));\n});\n\nrouter.get('/logout', async (req, res) => {\n  req.session.user = '';\n  res.redirect('/');\n});\n\nmodule.exports = router;\n","const express = require('express');\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => {\n  res.render('pages/dashboard');\n});\n\nmodule.exports = router;\n","const express = require('express');\nconst fs = require('fs');\nconst solidNodeClient = require('solid-node-client');\nconst SolidFileClient = require('solid-file-client');\n\nconst router = express.Router();\n\n/* idp: 'https://broker.pod.inrupt.com', // e.g. https://solidcommunity.net\n  username: 'iot-solid-bot',\n  password: 'kDLpdi!LK2AV84k',\n*/\n\n/*\n  Another SOLID account:\n  krosent\n  VtHf5NGuQffE2n7P\n*/\n\nrouter.get('/authorize/:username/:password', async (req, res) => {\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n  console.log(`username: ${req.params.username}`);\n  console.log(`password: ${req.params.password}`);\n\n  await client.login({\n    idp: 'https://solidcommunity.net', // e.g. https://solidcommunity.net\n    username: req.params.username,\n    password: req.params.password,\n  });\n  client\n    .getSession()\n    .then((session) => {\n      console.log(session);\n      if (session.isLoggedIn) {\n        const fileLink = `https://${req.params.username}.solidcommunity.net/automations/automations.yaml`;\n        try {\n          fileClient.readFile(fileLink).then((fl) => {\n            if (!fs.existsSync(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`)) {\n              fs.writeFile(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`, fl, { flag: 'a+' }, (automationFileError) => {\n                if (automationFileError) {\n                  console.error(automationFileError);\n                  return;\n                }\n                // file written successfully\n                console.log(`automations.file for user ${req.params.username} was created`);\n                const includeNewAutomationsFile = `automation ${req.params.username}: !include ${req.params.username}.yaml\\r\\n`;\n                fs.writeFile('/home/krosent/Projects/hass/core/config/configuration.yaml', includeNewAutomationsFile, { flag: 'a+' }, (configFileError) => {\n                  if (configFileError) {\n                    console.error(configFileError);\n                    return;\n                  }\n                  console.log(`automations.file for user ${req.params.username} was added to configuration.yaml`);\n                });\n              });\n            }\n          });\n        } catch (err) {\n          console.log(`error is: ${err}`);\n        }\n        res.status(200).send('Authorized');\n      } else {\n        res.status(405).send('Unauthorized');\n      }\n    })\n    .catch((error) => res.status(405).send(`Unauthorized, error: ${error}`));\n});\n\nrouter.get('/automations/fetch', async (_, res) => {\n  // https://iot-solid-bot.solidcommunity.net/automations/automations.yaml\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n\n  const fileLink = 'https://iot-solid-bot.solidcommunity.net/automations/automations.yaml';\n  try {\n    const file = await fileClient.readFile(fileLink);\n\n    res.write(file, 'binary');\n    res.end();\n  } catch (err) {\n    console.log(`error is: ${err}`);\n  }\n});\n\nmodule.exports = router;\n","/* eslint-disable no-console */\nconst express = require('express');\n\nconst app = express();\nconst path = require('path');\n\napp.set('view engine', 'ejs');\n\n// import dependencies for frontend\napp.use(\n  '/css',\n  express.static(path.join('./', 'node_modules/bootstrap/dist/css')),\n);\n\napp.use(\n  '/js',\n  express.static(path.join('./', 'node_modules/bootstrap/dist/js')),\n);\n\napp.use('/js', express.static(path.join('./', 'node_modules/jquery/dist')));\n\napp.use('/popper', express.static(path.join('./', 'node_modules/@popperjs/core/dist')));\n\napp.use('/vis-timeline', express.static(path.join('./', 'node_modules/vis-timeline')));\n\n// entry point routes\nconst entryPointRouter = require('./routes/entry');\n\napp.use('/', entryPointRouter);\n\n// dashboard routes\nconst dashboardRouter = require('./routes/dashboard');\n\napp.use('/dashboard', dashboardRouter);\n\n// solid auth routes\nconst solidRouter = require('./routes/solid-hass');\n\napp.use('/', solidRouter);\n\nmodule.exports = app;\n","const app = require('./app');\n\nconst port = '8888';\n\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}...`);\n});\n"]}