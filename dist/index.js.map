{"version":3,"sources":["app.js","index.js"],"names":["solidNodeClient","require","SolidFileClient","express","app","fs","path","set","use","static","join","get","req","res","render","isCharging","status","json","charger_type","icon","is_charging","params","charging","client","SolidNodeClient","fileClient","console","log","username","password","login","idp","getSession","then","session","isLoggedIn","fileLink","readFile","fl","existsSync","writeFile","flag","automationFileError","error","includeNewAutomationsFile","configFileError","err","send","catch","_","file","write","end","module","exports","port","listen"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["/* eslint-disable no-console */\nconst solidNodeClient = require('solid-node-client');\nconst SolidFileClient = require('solid-file-client');\nconst express = require('express');\n\nconst app = express();\nconst fs = require('fs');\nconst path = require('path');\n\napp.set('view engine', 'ejs');\n\napp.use(\n  '/css',\n  express.static(path.join('./', 'node_modules/bootstrap/dist/css')),\n);\n\napp.use(\n  '/js',\n  express.static(path.join('./', 'node_modules/bootstrap/dist/js')),\n);\n\napp.use('/js', express.static(path.join('./', 'node_modules/jquery/dist')));\n\napp.use('/popper', express.static(path.join('./', 'node_modules/@popperjs/core/dist')));\n\napp.use('/vis-timeline', express.static(path.join('./', 'node_modules/vis-timeline')));\n\napp.get('/', (req, res) => {\n  res.render('pages/index');\n});\n\nlet isCharging = false;\n\napp.get('/battery/api', async (req, res) => {\n  res.status(200).json({ charger_type: 'powerBank', icon: 'battery', is_charging: isCharging });\n});\n\napp.get('/battery/api/:charging', async (req, res) => {\n  isCharging = req.params.charging;\n  res.status(200).json({ charger_type: 'powerBank', icon: 'battery', is_charging: isCharging });\n});\n\n/* idp: 'https://broker.pod.inrupt.com', // e.g. https://solidcommunity.net\n  username: 'iot-solid-bot',\n  password: 'kDLpdi!LK2AV84k',\n*/\n\n/*\n  Another SOLID account:\n  krosent\n  VtHf5NGuQffE2n7P\n*/\n\napp.get('/authorize/:username/:password', async (req, res) => {\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n  console.log(`username: ${req.params.username}`);\n  console.log(`password: ${req.params.password}`);\n\n  await client.login({\n// const axios = require('axios');\n    idp: 'https://solidcommunity.net', // e.g. https://solidcommunity.net\n    username: req.params.username,\n    password: req.params.password,\n  });\n  client\n    .getSession()\n    .then((session) => {\n      console.log(session);\n      if (session.isLoggedIn) {\n        const fileLink = `https://${req.params.username}.solidcommunity.net/automations/automations.yaml`;\n        try {\n          fileClient.readFile(fileLink).then((fl) => {\n            if (!fs.existsSync(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`)) {\n              fs.writeFile(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`, fl, { flag: 'a+' }, (automationFileError) => {\n                if (automationFileError) {\n                  console.error(automationFileError);\n                  return;\n                }\n                // file written successfully\n                console.log(`automations.file for user ${req.params.username} was created`);\n                const includeNewAutomationsFile = `automation ${req.params.username}: !include ${req.params.username}.yaml\\r\\n`;\n                fs.writeFile('/home/krosent/Projects/hass/core/config/configuration.yaml', includeNewAutomationsFile, { flag: 'a+' }, (configFileError) => {\n                  if (configFileError) {\n                    console.error(configFileError);\n                    return;\n                  }\n                  console.log(`automations.file for user ${req.params.username} was added to configuration.yaml`);\n                });\n              });\n            }\n          });\n        } catch (err) {\n          console.log(`error is: ${err}`);\n        }\n\n        // TODO: Create person in configuration\n        // const readPersonFile = fs.readFileSync('/home/krosent/Projects/hass/core/config/.storage/person.yaml');\n        // const personJson = JSON.parse(readPersonFile);\n        // if (personJson.data.items.contains())\n\n        res.status(200).send('Authorized');\n      } else {\n        res.status(405).send('Unauthorized');\n      }\n    })\n    .catch((error) => res.status(405).send('Unauthorized'));\n});\n\napp.get('/automations/fetch', async (_, res) => {\n  // https://iot-solid-bot.solidcommunity.net/automations/automations.yaml\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n\n  const fileLink = 'https://iot-solid-bot.solidcommunity.net/automations/automations.yaml';\n  try {\n    const file = await fileClient.readFile(fileLink);\n\n    res.write(file, 'binary');\n    res.end();\n  } catch (err) {\n    console.log(`error is: ${err}`);\n  }\n});\n\nmodule.exports = app;\n","const app = require('./app');\n\nconst port = '8888';\n\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}...`);\n});\n"]}