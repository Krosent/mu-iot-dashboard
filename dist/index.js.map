{"version":3,"sources":["routes/entry.js","routes/dashboard.js","routes/solid-hass.js","app.js","index.js"],"names":["express","require","router","Router","get","req","res","render","module","exports","fs","solidNodeClient","SolidFileClient","client","SolidNodeClient","fileClient","console","log","params","username","password","login","idp","getSession","then","session","isLoggedIn","fileLink","readFile","fl","existsSync","writeFile","flag","automationFileError","error","includeNewAutomationsFile","configFileError","err","status","send","catch","_","file","write","end","app","path","set","use","static","join","entryPointRouter","dashboardRouter","solidRouter","port","listen"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => {\n  res.render('pages/entry');\n});\n\nmodule.exports = router;\n","const express = require('express');\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => {\n  res.render('pages/dashboard');\n});\n\nmodule.exports = router;\n","const express = require('express');\nconst fs = require('fs');\nconst solidNodeClient = require('solid-node-client');\nconst SolidFileClient = require('solid-file-client');\n\nconst router = express.Router();\n\n/* idp: 'https://broker.pod.inrupt.com', // e.g. https://solidcommunity.net\n  username: 'iot-solid-bot',\n  password: 'kDLpdi!LK2AV84k',\n*/\n\n/*\n  Another SOLID account:\n  krosent\n  VtHf5NGuQffE2n7P\n*/\n\nrouter.get('/authorize/:username/:password', async (req, res) => {\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n  console.log(`username: ${req.params.username}`);\n  console.log(`password: ${req.params.password}`);\n\n  await client.login({\n    idp: 'https://solidcommunity.net', // e.g. https://solidcommunity.net\n    username: req.params.username,\n    password: req.params.password,\n  });\n  client\n    .getSession()\n    .then((session) => {\n      console.log(session);\n      if (session.isLoggedIn) {\n        const fileLink = `https://${req.params.username}.solidcommunity.net/automations/automations.yaml`;\n        try {\n          fileClient.readFile(fileLink).then((fl) => {\n            if (!fs.existsSync(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`)) {\n              fs.writeFile(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`, fl, { flag: 'a+' }, (automationFileError) => {\n                if (automationFileError) {\n                  console.error(automationFileError);\n                  return;\n                }\n                // file written successfully\n                console.log(`automations.file for user ${req.params.username} was created`);\n                const includeNewAutomationsFile = `automation ${req.params.username}: !include ${req.params.username}.yaml\\r\\n`;\n                fs.writeFile('/home/krosent/Projects/hass/core/config/configuration.yaml', includeNewAutomationsFile, { flag: 'a+' }, (configFileError) => {\n                  if (configFileError) {\n                    console.error(configFileError);\n                    return;\n                  }\n                  console.log(`automations.file for user ${req.params.username} was added to configuration.yaml`);\n                });\n              });\n            }\n          });\n        } catch (err) {\n          console.log(`error is: ${err}`);\n        }\n        res.status(200).send('Authorized');\n      } else {\n        res.status(405).send('Unauthorized');\n      }\n    })\n    .catch((error) => res.status(405).send(`Unauthorized, error: ${error}`));\n});\n\nrouter.get('/automations/fetch', async (_, res) => {\n  // https://iot-solid-bot.solidcommunity.net/automations/automations.yaml\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n\n  const fileLink = 'https://iot-solid-bot.solidcommunity.net/automations/automations.yaml';\n  try {\n    const file = await fileClient.readFile(fileLink);\n\n    res.write(file, 'binary');\n    res.end();\n  } catch (err) {\n    console.log(`error is: ${err}`);\n  }\n});\n\nmodule.exports = router;\n","/* eslint-disable no-console */\nconst express = require('express');\n\nconst app = express();\nconst path = require('path');\n\napp.set('view engine', 'ejs');\n\n// import dependencies for frontend\napp.use(\n  '/css',\n  express.static(path.join('./', 'node_modules/bootstrap/dist/css')),\n);\n\napp.use(\n  '/js',\n  express.static(path.join('./', 'node_modules/bootstrap/dist/js')),\n);\n\napp.use('/js', express.static(path.join('./', 'node_modules/jquery/dist')));\n\napp.use('/popper', express.static(path.join('./', 'node_modules/@popperjs/core/dist')));\n\napp.use('/vis-timeline', express.static(path.join('./', 'node_modules/vis-timeline')));\n\n// entry point routes\nconst entryPointRouter = require('./routes/entry');\n\napp.use('/', entryPointRouter);\n\n// dashboard routes\nconst dashboardRouter = require('./routes/dashboard');\n\napp.use('/dashboard', dashboardRouter);\n\n// solid auth routes\nconst solidRouter = require('./routes/solid-hass');\n\napp.use('/', solidRouter);\n\nmodule.exports = app;\n","const app = require('./app');\n\nconst port = '8888';\n\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}...`);\n});\n"]}