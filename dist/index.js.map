{"version":3,"sources":["routes/solid-hass.js","app.js","index.js"],"names":["express","require","fs","solidNodeClient","SolidFileClient","router","Router","get","req","res","client","SolidNodeClient","fileClient","console","log","params","username","password","login","idp","getSession","then","session","isLoggedIn","fileLink","readFile","fl","existsSync","writeFile","flag","automationFileError","error","includeNewAutomationsFile","configFileError","err","status","send","catch","_","file","write","end","module","exports","app","path","set","use","static","join","render","solidHass","port","listen"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const express = require('express');\nconst fs = require('fs');\nconst solidNodeClient = require('solid-node-client');\nconst SolidFileClient = require('solid-file-client');\n\nconst router = express.Router();\n\n/* idp: 'https://broker.pod.inrupt.com', // e.g. https://solidcommunity.net\n  username: 'iot-solid-bot',\n  password: 'kDLpdi!LK2AV84k',\n*/\n\n/*\n  Another SOLID account:\n  krosent\n  VtHf5NGuQffE2n7P\n*/\n\nrouter.get('/authorize/:username/:password', async (req, res) => {\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n  console.log(`username: ${req.params.username}`);\n  console.log(`password: ${req.params.password}`);\n\n  await client.login({\n    idp: 'https://solidcommunity.net', // e.g. https://solidcommunity.net\n    username: req.params.username,\n    password: req.params.password,\n  });\n  client\n    .getSession()\n    .then((session) => {\n      console.log(session);\n      if (session.isLoggedIn) {\n        const fileLink = `https://${req.params.username}.solidcommunity.net/automations/automations.yaml`;\n        try {\n          fileClient.readFile(fileLink).then((fl) => {\n            if (!fs.existsSync(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`)) {\n              fs.writeFile(`/home/krosent/Projects/hass/core/config/${req.params.username}.yaml`, fl, { flag: 'a+' }, (automationFileError) => {\n                if (automationFileError) {\n                  console.error(automationFileError);\n                  return;\n                }\n                // file written successfully\n                console.log(`automations.file for user ${req.params.username} was created`);\n                const includeNewAutomationsFile = `automation ${req.params.username}: !include ${req.params.username}.yaml\\r\\n`;\n                fs.writeFile('/home/krosent/Projects/hass/core/config/configuration.yaml', includeNewAutomationsFile, { flag: 'a+' }, (configFileError) => {\n                  if (configFileError) {\n                    console.error(configFileError);\n                    return;\n                  }\n                  console.log(`automations.file for user ${req.params.username} was added to configuration.yaml`);\n                });\n              });\n            }\n          });\n        } catch (err) {\n          console.log(`error is: ${err}`);\n        }\n        res.status(200).send('Authorized');\n      } else {\n        res.status(405).send('Unauthorized');\n      }\n    })\n    .catch((error) => res.status(405).send(`Unauthorized, error: ${error}`));\n});\n\nrouter.get('/automations/fetch', async (_, res) => {\n  // https://iot-solid-bot.solidcommunity.net/automations/automations.yaml\n  const client = new solidNodeClient.SolidNodeClient();\n  const fileClient = new SolidFileClient(client);\n\n  const fileLink = 'https://iot-solid-bot.solidcommunity.net/automations/automations.yaml';\n  try {\n    const file = await fileClient.readFile(fileLink);\n\n    res.write(file, 'binary');\n    res.end();\n  } catch (err) {\n    console.log(`error is: ${err}`);\n  }\n});\n\nmodule.exports = router;\n","/* eslint-disable no-console */\nconst express = require('express');\n\nconst app = express();\nconst path = require('path');\n\napp.set('view engine', 'ejs');\n\n// import dependencies for frontend\napp.use(\n  '/css',\n  express.static(path.join('./', 'node_modules/bootstrap/dist/css')),\n);\n\napp.use(\n  '/js',\n  express.static(path.join('./', 'node_modules/bootstrap/dist/js')),\n);\n\napp.use('/js', express.static(path.join('./', 'node_modules/jquery/dist')));\n\napp.use('/popper', express.static(path.join('./', 'node_modules/@popperjs/core/dist')));\n\napp.use('/vis-timeline', express.static(path.join('./', 'node_modules/vis-timeline')));\n\n// dashboard main page\napp.get('/', (req, res) => {\n  res.render('pages/index');\n});\n\n// solid auth routes\nconst solidHass = require('./routes/solid-hass');\n// â€¦\napp.use('/', solidHass);\n\nmodule.exports = app;\n","const app = require('./app');\n\nconst port = '8888';\n\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}...`);\n});\n"]}